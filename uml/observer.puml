@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
    + {abstract}bombEffect():int

}

class HeroAircraft {
  - effectTimer:int
  + isReset:boolean
  - {static}instance:HeroAircraft
  - observerList:List<AbstractFlyingObject>
  - tempScores:int
  - savedShootInterval:long
  - HeroAircraft()
  + {static} getInstance():HeroAircraft
  + init(int locationX,int locationY, int speedX,int speedY,int hp):void
  + forward():void
  + heal(int healAmount):void
  + setShootInterval(int interval):void
  + setEffectTimer(int duration):void
  + getEffectTimer():long
  + resetStrategy():void
  + effectTimerUpdate(int timeInterval):void
  + addObserver(AbstractFlyingObject observer):void
  + removeObserver(AbstractFlyingObject observer):void
  + removeInvalid():void
  + useBomb():void
  + getScores():int
  + addInterval(int interval): void
  + saveInterval():void
  + getInterval():long
  + bombEffect():int
}

class BombItem {
    + BombItem(int locationX, int locationY, int speedX, int speedY)
    + activateEffect(HeroAircraft heroAircraft):void
}

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(AbstractFlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
    + {abstract}bombEffect():int
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,int speedX, int speedY, int power)
    + bombEffect():int
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp, ShootStrategy strategy, BulletFactory bulletFactory)
    + spawnItems():List<BaseItem>
    + getScores():int
    + bombEffect():int
}

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp,ShootStrategy strategy, BulletFactory bulletFactory)
    + getScores():int
    + bombEffect():int
}

class SuperElite {
    + SuperElite(int locationX, int locationY, int speedX, int speedY, int hp,ShootStrategy strategy, BulletFactory bulletFactory)
    + getScores():int
    + bombEffect():int
}

class BossEnemy {
    - minX:int
    - maxX:int
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp,ShootStrategy strategy, BulletFactory bulletFactory)
    + forward():void
    + getScores():int
    + bombEffect():int
}

HeroAircraft o--> AbstractFlyingObject
AbstractFlyingObject <|-- MobEnemy
AbstractFlyingObject <|-- EliteEnemy
AbstractFlyingObject <|-- SuperElite
AbstractFlyingObject <|-- BossEnemy
AbstractFlyingObject <|-- EnemyBullet


BombItem --> HeroAircraft
BombItem ..> MobEnemy
BombItem ..> EliteEnemy
BombItem ..> SuperElite
BombItem ..> BossEnemy
BombItem ..> EnemyBullet
@enduml